service: cowin-notification-service
app: cowin-notification-service
org: reziba

frameworkVersion: '2'

custom:
  secrets: ${file(secrets.${opt:stage, self:provider.stage}.yml)}

provider:
  name: aws
  runtime: python3.8
  timeout: 30
  lambdaHashingVersion: 20201221
  stage: dev
  region: ap-south-1
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - s3:*
            - cloudwatch:*
            - sqs:*
          Resource: '*'
  environment:
      DB_HOSTNAME: ${self:custom.secrets.DB_HOSTNAME}
      DB_PASSWORD: ${self:custom.secrets.DB_PASSWORD}
      DB_PORT: ${self:custom.secrets.DB_PORT}
      DB_USER: ${self:custom.secrets.DB_USER}
      DB_NAME: ${self:custom.secrets.DB_NAME}
      DISTRICT_QUEUE_URL: !Ref DistrictQueue
      NOTIF_QUEUE_URL: !Ref NotificationQueue
  apiGateway:
    shouldStartNameWithService: true

plugins:
  - serverless-python-requirements
  - serverless-secrets-plugin

package:
  individually: true
  exclude:
    - venv/**
    - node_modules/**

functions:
  get_states:
    handler: handler.get_states
    events:
      - http:
          path: /states
          method: get

  get_districts:
    handler: handler.get_districts
    events:
      - http:
          path: /districts
          method: get

  get_centers:
    handler: handler.get_centers
    events:
      - http:
          path: /centers
          method: get

  get_district_preferences:
    handler: handler.get_district_preferences
    events:
      - http:
          path: /centers/preferences
          method: get

  subscribe:
    handler: handler.subscribe
    events:
      - http:
          path: /subscribe
          method: post
          cors: true

  unsubscribe:
    handler: handler.unsubscribe
    events:
      - http:
          path: /unsubscribe
          method: post
          cors: true

  trigger_district_updates:
    handler: handler.trigger_district_updates
    events:
      - http:
          path: /trigger_update
          method: post
          cors: true

  update_district_slots:
    handler: handler.update_district_slots
    reservedConcurrency: 20
    events:
      - sqs:
          arn: !GetAtt DistrictQueue.Arn

resources:
  Resources:
    DistrictQueue:
      Type: AWS::SQS::Queue
      Properties:
        VisibilityTimeout: 120
    NotificationQueue:
      Type: AWS::SQS::Queue
      Properties:
        VisibilityTimeout: 120